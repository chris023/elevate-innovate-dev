{"version":3,"sources":["assets/media/promovid.mp4","assets/icons/play-button.svg","assets/icons/hamburger.svg","components/PlayButton.js","components/NavList.js","components/BackgroundVideo.js","components/Us.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PlayButton","react_default","a","createElement","className","src","playico","alt","Component","NavList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavMenu","setState","expanded","state","_this2","links","web","to","top","config","tension","friction","_ref","bottom","style","concat","native","from","opacity","x","keys","map","link","_ref2","li","transform","interpolate","onClick","hamburgerico","BackgroundVideo","ReactPlayer_default","url","promoVid","loop","muted","playing","width","height","components_NavList","components_PlayButton","Us","App","components_BackgroundVideo","components_Us","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cce6c555.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/promovid.a9388f29.mp4\";","module.exports = __webpack_public_path__ + \"static/media/play-button.122f38c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.7c8eadc1.svg\";","import React, { Component } from 'react';\nimport playico from '../assets/icons/play-button.svg';\nimport '../styles/PlayButton.css';\n\nclass PlayButton extends Component {\n\n  render() {\n\n    return (\n      <img className='play-button' src={ playico } alt='Play' />\n    );\n\n  }\n}\n\nexport default PlayButton;","import React, { Component } from 'react';\nimport hamburgerico from '../assets/icons/hamburger.svg';\nimport { Trail, Transition, Spring, animated } from 'react-spring'\n\nimport '../styles/NavList.css';\n\nclass NavList extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      expanded: false\n    };\n\n  }\n\n  toggleNavMenu = () => {\n    this.setState({ expanded: !this.state.expanded });\n  }\n\n  render() {\n    const links = ['Us', 'Work', 'Develop', 'Deliver', 'Innovation', 'Contact'];\n\n    return (\n      // <div className={`nav-container ${this.state.expanded ? 'nav-container-expand' : 'nav-container-collapse'}`}>\n      // <div className={`nav-container`}>\n        <Spring\n        // from={{ top: this.state.expanded ? '400px' : '20px' }}\n        to={{ top: this.state.expanded ? '200px' : '-400px' }}\n        config={{ tension: 40, friction: 26 }}\n        >\n          {({ top, bottom }) => (\n\n            <div\n              style={{\n                top,\n                bottom\n            }}\n            className='nav-container'\n          >\n        \n        <ul className={`nav-links ${this.state.expanded ? '' : 'hide'}`}>\n\n          <Trail\n            native\n            from={{\n              opacity: 0,\n              x: 100,\n            }}\n            to={{\n              opacity: this.state.expanded ? 1 : 0.25,\n              x: this.state.expanded ? 0 : -100,\n            }}\n            keys={links}>\n            {links.map(link => ({ x, opacity }) => (\n              <animated.li\n                className=\"nav-link\"\n                style={{\n                  opacity,\n                  transform: x.interpolate(x => `translate3d(${x}%,0,0)`)\n                }}\n              >{link}</animated.li>\n            ))}\n          </Trail>\n\n        </ul>\n\n        <div onClick={this.toggleNavMenu} className='company-title'>\n          <img className='hamburger-ico' src={hamburgerico} alt=''></img>\n          <p className='company-title'>Elevate Innovation</p>\n        </div>\n        \n          </div>\n        )}\n      </Spring>\n    );\n  }\n\n\n}\n  \nexport default NavList;\n\n\n/* <div onClick={this.toggleNavMenu}>\n          <img className='hamburger-ico' src={hamburgerico} alt=''></img>\n          <p className='company-title'>Elevate Innovation</p>\n        </div> */\n\n/* <Spring\n          from={{\n            width: 100,\n            padding: 0,\n            background: 'linear-gradient(to right, #30e8bf, #ff8235)',\n            transform:\n              'perspective(600px) translate3d(400px,0,0) scale(2) rotateX(90deg)',\n            boxShadow: '0px 100px 150px -10px #2D3747',\n            borderBottom: '0px solid white',\n            shape: 'M20,380 L380,380 L380,380 L200,20 L20,380 Z',\n            textShadow: '0px 5px 0px white',\n          }}\n          to={{\n            width: 'auto',\n            padding: 20,\n            background: 'linear-gradient(to right, #009fff, #ec2f4b)',\n            transform:\n              'perspective(600px) translate3d(0px,0,0) scale(1) rotateX(0deg)',\n            boxShadow: '0px 10px 20px 0px rgba(0,0,0,0.4)',\n            borderBottom: '10px solid #2D3747',\n            shape: 'M20,20 L20,380 L380,380 L380,20 L20,20 Z',\n            textShadow: '0px 5px 15px rgba(255,255,255,0.5)',\n          }}\n          config={{ tension: 10, friction: 50 }}\n        >\n          {({\n            width,\n            padding,\n            background,\n            transform,\n            boxShadow,\n            borderBottom,\n            textShadow,\n            shape,\n          }) => (\n              <div\n                style={{\n                  display: 'inline-block',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  fontSize: '4em',\n                  fontWeight: 800,\n                  width,\n                  padding,\n                  background,\n                  transform,\n                  boxShadow,\n                  textShadow,\n                }}\n              >\n                <svg style={{ display: 'inline', width: 50 }} viewBox=\"0 0 400 400\">\n                  <path d={shape} fill=\"#2D3747\" />\n                </svg>\n                <span style={{ borderBottom }}>ðŸ˜…</span>\n              </div>\n            )}\n        </Spring> */\n\n{/* <Spring\n  from={{ top: '2vw' }}\n  to={{ top: '46vw' }}\n  config={{ tension: 10, friction: 50 }}\n>\n  {({ top, bottom }) => (\n\n    <div\n      style={{\n        top,\n        bottom\n      }}\n      onClick={this.toggleNavMenu}\n      className=''\n    >\n      <img className='hamburger-ico' src={hamburgerico} alt=''></img>\n      <p className='company-title'>Elevate Innovation</p>\n    </div>\n  )}\n</Spring> */}","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport promoVid from '../assets/media/promovid.mp4';\nimport PlayButton from './PlayButton';\nimport NavList from './NavList';\n\nimport '../styles/BackgroundVideo.css';\n\nclass BackgroundVideo extends Component {\n\n  render() {\n\n    return (\n      <div>\n        <div className='player-wrapper'>\n          <ReactPlayer\n            url={promoVid}\n\n            className='react-player'\n\n            loop={true}\n            muted={true}\n            playing={true}\n            width='100%'\n            height='100%'\n          />\n        </div>\n        <div className='overlay'>\n          <NavList />\n          <PlayButton />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default BackgroundVideo;\n","import React, { Component } from 'react';\nimport '../styles/Us.css';\n\nclass Us extends Component {\n\n  render() {\n\n    return (\n      <div>\n        <h2>Us</h2>\n        <p>We are a small agile team that makes communication simple and allows for quick execution from concept to reality</p>\n        <p>ENGINEERS, DESIGNERS, TECHNOLOGY CONSULTANTS, PROTOTYPE  AND MANUFACTURING  SPECIALISTS,  PRODUCT  INSPECTION  AND  TESTING  TEAMS,  QUALITY  CONTROL  CONSULTANTS  AND  LOGISTICS  PARTNERS.  </p>\n        <p>Offices</p>\n        <ul>\n          <li>Ft. Lauderdale</li>\n          <li>Miami</li>\n          <li>New York</li>\n          <li>Los Angeles</li>\n          <li>Hong Kong</li>\n          <li>Guangzhou</li>\n          <li>Delhit</li>\n        </ul>\n      </div>\n    );\n\n  }\n}\n\nexport default Us;","import React, { Component } from 'react';\nimport BackgroundVideo from './components/BackgroundVideo';\nimport Us from './components/Us'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className='app-grid-container'>\n          <BackgroundVideo />\n        </div>\n          <Us />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Noto Serif:300,400,700', 'serif']\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}